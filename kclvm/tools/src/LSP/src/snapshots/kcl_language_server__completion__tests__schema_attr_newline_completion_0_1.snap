---
source: tools/src/LSP/src/completion.rs
expression: "format!(\"{:?}\",\n    {\n        let(file, program, _, gs) =\n        compile_test_file(\"src/test_data/completion_test/newline/schema/schema_0/schema_0.k\")\n        ; let pos = KCLPos\n        { filename : file.clone(), line : 5, column : Some(4), } ; let tool =\n        toolchain :: default() ; let mut got =\n        completion(Some('\\n'), & program, & pos, & gs, & tool).unwrap() ;\n        match & mut got\n        {\n            CompletionResponse :: Array(arr) =>\n            {\n                let mut labels : Vec < String > =\n                arr.iter().map(| item | item.label.clone()).collect() ;\n                labels.sort() ; let builtin_func_lables : Vec < String > =\n                BUILTIN_FUNCTIONS.iter().map(| (name, func) |\n                {\n                    func_ty_complete_label(name, & func.into_func_type())\n                }).collect() ; let labels : Vec < String > =\n                labels.iter().filter(| label |!\n                builtin_func_lables.contains(label)).map(| label |\n                label.clone()).collect() ; labels\n            } CompletionResponse :: List(_) => panic! (\"test failed\"),\n        }\n    })"
---
[]
